import { useCallback, useEffect, useState } from "react"

import IntlCurrencyInput from "react-intl-currency-input"

import { VscError } from "react-icons/vsc"
import { BsQuestion } from "react-icons/bs"
import { FiCheckCircle } from "react-icons/fi"

import Head from "next/head"
import baseStyle from "../../styles/base.module.css"

import Header from "../Header"
import Footer from "../Footer"

import Presentation from "../Presentation"
import Error from "../Error"
import Loading from "../Loading"

import { useWhatIsThePrice } from "../../hooks/what-is-the-price/WhatIsThePriceProvider"

const TIME = 5000
let interval: any

const currencyConfig = {
  locale: "pt-BR",
  formats: {
    number: {
      BRL: {
        style: "currency",
        currency: "BRL",
        minimumFractionDigits: 0,
        maximumFractionDigits: 0,
      },
    },
  },
}

export default function WhatsIsThePrice() {
  const {
    loadingWhatIsThePrice,
    makeWhatIsThePrice,
    makeResults,
    product,
    results,
    setLoadingWhatIsThePrice,
    errorMessage
  }: any = useWhatIsThePrice()

  const [yourPrice, setYourPrice] = useState("")
  const [yourPriceMasked, setYourPriceMasked] = useState("")
  const [isStart, setIsStart] = useState(false)
  const [regressiveTime, setRegressiveTime] = useState(TIME / 1000)

  useEffect(() => {
    setIsStart(false)

    return () => {
      clearInterval(interval)
    }
  }, [results])

  useEffect(() => {
    const init = () => {
      clearInterval(interval)

      if (yourPrice) {
        setLoadingWhatIsThePrice(true)

        makeResults(yourPrice)

        setTimeout(() => {
          setLoadingWhatIsThePrice(false)
        }, 2000)

        return
      }

      setLoadingWhatIsThePrice(true)

      setTimeout(() => {
        setLoadingWhatIsThePrice(false)
        handleStart({})
      }, 2000)
    }

    if (regressiveTime === 0) init()
  }, [regressiveTime])

  const timeStart = () => {
    let seconds = TIME / 1000

    const inputMoney: any = document.querySelector("#input-money")

    inputMoney.focus()
    setRegressiveTime(seconds)

    interval = setInterval(() => {
      seconds = seconds - 1
      setRegressiveTime(seconds)
    }, 1000)
  }

  const handleStart = useCallback(
    async (e) => {
      if (e.preventDefault) e.preventDefault()

      setYourPrice("")
      setIsStart(true)

      await makeWhatIsThePrice()

      timeStart()
    },
    [isStart]
  )

  const handleSubmit = useCallback(
    (e) => {
      if (e) e.preventDefault()

      setLoadingWhatIsThePrice(true)

      setTimeout(() => {
        makeResults(yourPrice)
        setLoadingWhatIsThePrice(false)
      }, 2000)
    },
    [yourPrice]
  )

  const handleMoney = useCallback(
    (event, value, maskedValue) => {
      setYourPrice(value)
      setYourPriceMasked(maskedValue)
    },
    [yourPrice]
  )

  return (
    <div className={baseStyle.container}>
      <Head>
        <title>Qual é o preço?</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/images/favicon.ico" />
      </Head>

      <main className={baseStyle.main}>
        <Header activeIdItem={4} />
        <section className={baseStyle.presentation + " py-8"}>
          {isStart && product.id && !loadingWhatIsThePrice ? (
            <div className={baseStyle.content}>
              <hgroup className="mb-6">
                <h1 className="text-3xl mb-2">Qual é o preço?</h1>
                <h2 className="text-sm text-gray-600">
                  Acerte o preço e ganhe promoções exclusivas
                </h2>
              </hgroup>

              <div className="shadow border rounded-lg bg-white mb-6 divide-y divide-gray-200 divide-y height-full overflow-hidden">
                <div
                  className={"px-4 py-4 divide-b flex items-center relative"}
                >
                  <div>
                    <div className={"mr-4"}>
                      <img
                        width="auto"
                        height="auto"
                        src={product.image}
                        alt={product.title}
                        className="ui-search-result-image__element"
                        title={`Console Playstation 4 1tb Bundle 18 - Ps4 / ${product.price}`}
                      />
                    </div>
                  </div>
                  <div className={"w-3/5"}>
                    <div className="mb-2">
                      <span className={"text-sm text-gray-400"}>
                        {product.condition}
                      </span>
                      <h3 className={"text-2xl"}>{product.title}</h3>
                    </div>

                    <div className={"pt-3 pb-3"}>
                      <div>
                        <div className="w-full flex">
                          <form
                            className="w-2/5"
                            autoComplete="off"
                            onSubmit={handleSubmit}
                          >
                            <div className="flex">
                              <IntlCurrencyInput
                                id="input-money"
                                className="shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                placeholder="Seu preço"
                                defaultValue={Number(yourPrice)}
                                currency="BRL"
                                config={currencyConfig}
                                onChange={handleMoney}
                              />

                              <button
                                className="border-b-2 font-bold border-blue-600 text-sm bg-blue-500 py-2 px-3 rounded text-white"
                                aria-current="page"
                              >
                                pronto!
                              </button>
                            </div>
                          </form>
                        </div>
                      </div>
                    </div>

                    <div className="flex bg-white items-center justify-center flex-wrap flex-col absolute top-4 right-4">
                      <div
                        className={
                          "w-20 h-20 rounded-full border-4 border-green-200 text-green-500 flex items-center justify-center text-5xl"
                        }
                      >
                        {regressiveTime}
                      </div>
                      <div
                        className={"text-green-500 mt-2 text-center text-sm"}
                      >
                        Segundos
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <>
              {loadingWhatIsThePrice ? (
                <div className={baseStyle.content}>
                  <Loading />
                </div>
              ) : (
                <div className={baseStyle.content}>
                  {!results.finished ? (
                    <>
                      {!errorMessage ? (
                        <Presentation>
                          <span className="mb-4 border border-gray-200 rounded-full p-4">
                            <BsQuestion size="84" className="text-blue-500" />
                          </span>
                          <h1 className="text-2xl mb-2">
                            Adivinhe o preço e ganhe promoções exclusivas
                          </h1>
                          <p className="text-gray-500 flex items-center mb-5">
                            Você terá 5 segundos para adivinhar o preço, boa sorte.
                            :)
                          </p>
                          <div className="text-center">
                            <a
                              href="/"
                              onClick={(e) => handleStart(e)}
                              className="border-b-2 font-bold border-blue-600 text-sm bg-blue-500 py-2 px-3 rounded text-white"
                              aria-current="page"
                            >
                              Começar agora!
                            </a>
                          </div>
                        </Presentation>
                      ) : (                  
                        <Error messageText={errorMessage} />
                      )}
                    </>
                  ) : (
                    <>
                      {results.error ? (
                        <Presentation>
                          <span className="mb-4 border border-gray-200 rounded-full p-4">
                            <VscError size={84} className={"text-red-500"} />
                          </span>
                          <h1 className="text-2xl mb-2">Não foi dessa vez!</h1>
                          <p className="text-gray-500 flex items-center mb-5">
                            Você não acertou o valor {yourPriceMasked} de{" "}
                            {product.title}. :(
                          </p>
                          <div className="text-center">
                            <a
                              href="/"
                              onClick={(e) => handleStart(e)}
                              className="border-b-2 font-bold border-blue-600 text-sm bg-blue-500 py-2 px-3 rounded text-white"
                              aria-current="page"
                            >
                              Tente novamente
                            </a>
                          </div>
                        </Presentation>
                      ) : (
                        <Presentation>
                          <span className="mb-4 border border-gray-200 rounded-full p-4">
                            <FiCheckCircle
                              size="84"
                              className="text-green-500"
                            />
                          </span>
                          <h1 className="text-2xl mb-2 text-green-500 font-bold">
                            Parabéns!
                          </h1>
                          <p className="text-gray-500 flex items-center mb-5 text-center">
                            Você acertou em cheio o valor {yourPriceMasked}<br />
                            {product.title}.
                          </p>
                          <div className="text-center mb-4">
                            <a
                              target="_blank"
                              href={`${product.permalink}?code=${results.code}`}
                              className="border-b-2 font-bold border-blue-600 text-sm bg-blue-500 py-2 px-3 rounded text-white inline-block"
                              aria-current="page"
                            >
                              {results.description}
                            </a>
                          </div>
                          <div className="text-center">
                            <a
                              href="/"
                              onClick={(e) => handleStart(e)}
                              className="border-b-2 border-gray-200 text-sm bg-gray-100 py-2 px-3 rounded text-gray-600 inline-block"
                              aria-current="page"
                            >
                              Jogar novamente
                            </a>
                          </div>
                        </Presentation>
                      )}
                    </>
                  )}
                </div>
              )}
            </>
          )}
        </section>

        <Footer />
      </main>
    </div>
  )
}
